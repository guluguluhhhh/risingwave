# Test for GAP FILL in normal streaming mode (without EOWC).
# This tests the StreamGapFill executor.

statement ok
CREATE TABLE gap_normal_table (
    device_id VARCHAR,
    ts TIMESTAMP,
    value DOUBLE,
    PRIMARY KEY (device_id, ts)
);

statement ok
INSERT INTO gap_normal_table VALUES
    ('device1', '2024-05-21 10:00:00', 10.0),
    ('device1', '2024-05-21 10:02:00', 12.0),
    ('device1', '2024-05-21 10:05:00', 15.0);

# Use normal streaming syntax (without EMIT ON WINDOW CLOSE)
statement ok
CREATE MATERIALIZED VIEW gap_filled_normal AS
SELECT device_id, ts, value
FROM GAP_FILL(gap_normal_table, ts, INTERVAL '1' MINUTE);

# Insert some more data
statement ok
INSERT INTO gap_normal_table VALUES
    ('device1', '2024-05-21 10:08:00', 20.0);

# Wait for processing
sleep 3s

# Check the result - GAP_FILL uses LOCF (Last Observation Carried Forward) by default
query TTR
SELECT device_id, ts, value FROM gap_filled_normal ORDER BY device_id, ts;
----
device1 2024-05-21 10:00:00 10
device1 2024-05-21 10:01:00 10
device1 2024-05-21 10:02:00 12
device1 2024-05-21 10:03:00 12
device1 2024-05-21 10:04:00 12
device1 2024-05-21 10:05:00 15
device1 2024-05-21 10:06:00 15
device1 2024-05-21 10:07:00 15
device1 2024-05-21 10:08:00 20

# Test with custom fill strategies
statement ok
DROP MATERIALIZED VIEW gap_filled_normal;

statement ok
CREATE MATERIALIZED VIEW gap_filled_custom AS
SELECT device_id, ts, value
FROM GAP_FILL(gap_normal_table, ts, INTERVAL '1' MINUTE, LOCF(value));

# Wait for processing
sleep 2s

# Should have same result with explicit LOCF strategy
query TTR
SELECT device_id, ts, value FROM gap_filled_custom ORDER BY device_id, ts;
----
device1 2024-05-21 10:00:00 10
device1 2024-05-21 10:01:00 10
device1 2024-05-21 10:02:00 12
device1 2024-05-21 10:03:00 12
device1 2024-05-21 10:04:00 12
device1 2024-05-21 10:05:00 15
device1 2024-05-21 10:06:00 15
device1 2024-05-21 10:07:00 15
device1 2024-05-21 10:08:00 20

statement ok
DROP MATERIALIZED VIEW gap_filled_custom;

statement ok
DROP TABLE gap_normal_table;